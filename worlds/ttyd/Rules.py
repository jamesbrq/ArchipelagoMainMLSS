import typing

from worlds.generic.Rules import add_rule
from . import StateLogic

if typing.TYPE_CHECKING:
    from . import TTYDWorld


def set_rules(world: "TTYDWorld", excluded):
    add_rule(world.multiworld.get_location("Boggly Woods Plane Panel Room: Shine Sprite", world.player), lambda state: state.has("Koops", world.player) or state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Plane Panel Room: Quake Hammer", world.player), lambda state: state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Outside Flurrie's House: Star Piece 1", world.player), lambda state: state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Outside Flurrie's House: Star Piece 2", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Outside Flurrie's House: Volt Shroom", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Flurrie's House: Flurrie", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player) and state.has("Necklace", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Flurrie's House Backroom: Super Appeal P", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player) and state.has("Necklace", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Flurrie's House Backroom: Star Piece", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player) and state.has("Necklace", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Boggly Woods Outside Great Tree: FP Plus", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Great Tree Entrance: Mystic Egg", world.player), lambda state: state.has("Emerald Star", world.player))
    add_rule(world.multiworld.get_location("Great Tree Red Key Room: Mushroom", world.player), lambda state: state.has("Emerald Star", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Entrance: Keel Mango", world.player), lambda state: state.has("Sapphire Star", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Grotto Entrance: Wedding Ring", world.player), lambda state: state.has("Sapphire Star", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Main Hall: Steeple Key 1", world.player), lambda state: state.has("Koops", world.player) or state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Upper Room: Ruby Star", world.player), lambda state: state.has("Steeple Key 1", world.player) and state.has("The Letter \"P\"", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Underground Tube Passage: Shine Sprite", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Boo Chest Room: Star Piece", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Parrot Room: Mr. Softener", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Parrot Room: Power Plus", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Parrot Room: Star Piece", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Parrot Room: Steeple Key 2", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Creepy Steeple Parrot Room: The Letter \"P\"", world.player), lambda state: state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Excess Express Middle Passenger Car: Blanket", world.player), lambda state: state.has("Autograph", world.player))
    add_rule(world.multiworld.get_location("Excess Express Back Passenger Car: Shine Sprite", world.player), lambda state: state.has("Autograph", world.player))
    add_rule(world.multiworld.get_location("Excess Express Back Passenger Car: Mushroom", world.player), lambda state: state.has("Autograph", world.player) and state.has("Blanket", world.player))
    add_rule(world.multiworld.get_location("Excess Express Storage Car: Ragged Diary", world.player), lambda state: state.has("Autograph", world.player) and state.has("Vivian", world.player) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Excess Express Front Passenger Car: Vital Paper", world.player), lambda state: state.has("Autograph", world.player) and state.has("Vivian", world.player) and state.has("Ragged Diary", world.player) and state.has("Blanket", world.player))
    add_rule(world.multiworld.get_location("Excess Express Middle Passenger Car: Briefcase", world.player), lambda state: state.has("Autograph", world.player) and state.has("Vivian", world.player) and state.has("Ragged Diary", world.player) and state.has("Blanket", world.player) and state.has("Vital Paper", world.player))
    add_rule(world.multiworld.get_location("Excess Express Middle Passenger Car: Gold Ring", world.player), lambda state: state.has("Autograph", world.player) and state.has("Vivian", world.player) and state.has("Ragged Diary", world.player) and state.has("Blanket", world.player) and state.has("Vital Paper", world.player))
    add_rule(world.multiworld.get_location("Excess Express Middle Passenger Car: Shell Earrings", world.player), lambda state: state.has("Autograph", world.player) and state.has("Vivian", world.player) and state.has("Ragged Diary", world.player) and state.has("Blanket", world.player) and state.has("Vital Paper", world.player))
    add_rule(world.multiworld.get_location("Excess Express Dining Car: Star Piece 1", world.player), lambda state: state.has("Galley Pot", world.player))
    add_rule(world.multiworld.get_location("Excess Express Dining Car: Star Piece 2", world.player), lambda state: state.has("Shell Earrings", world.player))
    add_rule(world.multiworld.get_location("Excess Express Front Passenger Car: 30 Coins", world.player), lambda state: state.has("Gold Ring", world.player))
    add_rule(world.multiworld.get_location("Excess Express Locomotive: Star Piece", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Excess Express Middle Passenger Car: Star Piece", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Fahr Outpost Entrance: Star Piece", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Fahr Outpost Town: Star Piece 2", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Glitzville Lobby: Storage Key 2", world.player), lambda state: state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Glitzville Storage Back Room: Star Piece", world.player), lambda state: state.has("Flurrie", world.player) and state.has("Storage Key 1", world.player) and state.has("Storage Key 2", world.player) and state.has("Yoshi", world.player) and StateLogic.super_hammer(state, world.player))
    add_rule(world.multiworld.get_location("Glitzville Storage Room: Charge P", world.player), lambda state: state.has("Flurrie", world.player) and state.has("Storage Key 1", world.player))
    add_rule(world.multiworld.get_location("Glitzville Storage Room: Shine Sprite", world.player), lambda state: state.has("Flurrie", world.player) and state.has("Storage Key 1", world.player))
    add_rule(world.multiworld.get_location("Glitzville Storage Room: HP Plus P", world.player), lambda state: state.has("Flurrie", world.player) and state.has("Storage Key 1", world.player) and state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Glitzville Storage Room: Star Piece", world.player), lambda state: state.has("Super Boots", world.player) and state.has("Storage Key 1", world.player))
    add_rule(world.multiworld.get_location("Glitzville Main Square: Power Plus P", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Glitzville Main Square: Star Piece 4", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Glitzville Main Square: Star Piece 5", world.player), lambda state: state.has("Super Boots", world.player) and (state.has("Koops", world.player) or state.has("Tube Curse", world.player)))
    add_rule(world.multiworld.get_location("Glitzville Minor-League Room: Yoshi", world.player), lambda state: state.has("Super Boots", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Glitzville Minor-League Room: Dubious Paper", world.player), lambda state: StateLogic.super_hammer(state, world.player) and state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Glitzville Major-League Room: Champ's Belt", world.player), lambda state: state.has("Flurrie", world.player) and state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Glitzville Major-League Room: Ice Storm", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Glitzville Arena: Gold Star", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Flurrie", world.player) and StateLogic.super_hammer(state, world.player))
    add_rule(world.multiworld.get_location("Glitzville Promoter's Office: Star Piece 2", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Flurrie", world.player) and StateLogic.super_hammer(state, world.player))
    add_rule(world.multiworld.get_location("Great Tree Red/Blue Cages: Star Piece", world.player), lambda state: state.has("Blue Key", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Great Tree Entrance: Puni Orb", world.player), lambda state: state.has("Red Key", world.player))
    add_rule(world.multiworld.get_location("Great Tree Bubble Room: Shine Sprite", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player))
    add_rule(world.multiworld.get_location("Great Tree Bubble Room: Thunder Rage", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player))
    add_rule(world.multiworld.get_location("Great Tree Zigzag Room: Coin", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player))
    add_rule(world.multiworld.get_location("Great Tree Zigzag Room: Damage Dodge P", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player))
    add_rule(world.multiworld.get_location("Great Tree Zigzag Room: Star Piece", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: Honey Syrup", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: HP Drain", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: Ice Storm", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: Mini Mr.Mini", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: Mushroom", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Shop: Mystery", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Red Key Room: Blue Key", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Great Tree Super Boots Room: Super Boots", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player))
    add_rule(world.multiworld.get_location("Great Tree 100-Puni Pedestal: Coin", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player))
    add_rule(world.multiworld.get_location("Great Tree 100-Puni Pedestal: Star Piece", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player))
    add_rule(world.multiworld.get_location("Great Tree Fake Pedestal: Star Piece", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player))
    add_rule(world.multiworld.get_location("Great Tree Entrance: Emerald Star", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Elevator Pedestal: Mushroom", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Escape Ambush Room: Star Piece", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Pool Room: Dizzy Dial", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Pool Room: Shine Sprite", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Pool Room: Shrink Stomp", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Great Tree Lower Duplex: Coin", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Blue Key", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Great Tree Middel Duplex: Shine Sprite", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Great Tree Red Key Room: Charge", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Great Tree Red Key Room: Shine Sprite", world.player), lambda state: state.has("Red Key", world.player) and state.has("Puni Orb", world.player) and state.has("Flurrie", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Great Tree 10-Puni Pedestal: Star Piece", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Drawbridge: HP Plus", world.player), lambda state: state.has("Yoshi", world.player) or state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Entrance: Power Bounce", world.player), lambda state: state.has("Yoshi", world.player) or state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Red Bones Room: Castle Key", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Red Bones Room: Star Piece", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Paper Curse", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Switch Room: Castle Key", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Switch Room: Shine Sprite", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Switch Room: Star Piece 1", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Switch Room: Star Piece 2", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Central Staircase: Castle Key", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 3) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Central Staircase: Last Stand P", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 3) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Central Staircase: Shine Sprite", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 3) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Stair Central Staircase: Star Piece", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Prison Entrance: Paper Curse", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Prison Entrance: Attack FX R", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 4) and state.has("Black Key 2", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Spikes Room: Black Key 2", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 4) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Life Shroom Room: Life Shroom", world.player), lambda state: (state.has("Yoshi", world.player) or (state.has("Plane Curse", world.player) and state.has("Paper Curse", world.player))) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Plane Rafters Room: Star Piece", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 3) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Hooktail's Room: Diamond Star", world.player), lambda state: state.has("Plane Curse", world.player) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 4) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Hooktail's Castle Storeroom: Castle Key", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Storeroom: Honey Syrup", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Storeroom: Mushroom", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Storeroom: Shine Sprite", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 2))
    add_rule(world.multiworld.get_location("Hooktail's Castle Up Arrow Room: Up Arrow", world.player), lambda state: (state.has("Yoshi", world.player) or state.has("Plane Curse", world.player)) and state.has("Koops", world.player) and state.has("Castle Key", world.player, 4) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Landing Site: Star Piece", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Stupid Room: Coin 2", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Stupid Room: Thunder Rage", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Bridge: Coconut 1", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Bridge: Coconut 2", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Bridge: Inn Coupon", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Bridge: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Grotto Entrance: Spite Pouch", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Grotto Entrance: Star Piece", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Bridge: Ice Power", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Stupid Room: Jammin' Jelly", world.player), lambda state: state.has("Yoshi", world.player) or state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Jungle Stupid Room: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player) or state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Grotto Entrance: Bobbery", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Chuckola Cola", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Grotto Entrance: Skull Gem", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Chuckola Cola", world.player))
    add_rule(world.multiworld.get_location("Keelhaul Key Town: Chuckola Cola", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Coconut", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Dark Bones Room: Palace Key", world.player), lambda state: state.has("Tube Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Second Bullet Bill Hallway: Ultra Shroom", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Large Open Room: Coin", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Large Open Room: Jammin' Jelly", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Large Open Room: P-Up D-Down P", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Gloomtail Room: Star Key", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Gloomtail Room: Jammin' Jelly", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Gloomtail Room: Ultra Shroom", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 1 NW: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player) and state.has("Ultra Hammer", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 1 NE: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 1 SW: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 1 SE: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player) and state.has("Flurrie", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 2 NW: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player) and state.has("Ultra Hammer", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 2 NE: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 2 SW: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Riddle Tower Floor 2 SE: Palace Key (Riddle Tower)", world.player), lambda state: state.has("Tube Curse", world.player) and state.has("Palace Key", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player) and state.has("Vivian", world.player))
    add_rule(world.multiworld.get_location("Petal Meadows Field: Happy Heart", world.player), lambda state: state.has("Koops", world.player) or state.has("Yoshi", world.player) or state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Staircase: Coin", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Staircase: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Storeroom: Grotto Key", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Storeroom: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Storeroom: Star Piece", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Gate Handle Room: Gate Handle", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Staircase: Defend Plus P", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Cortez' Hoard: Sapphire Star", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Boat Curse", world.player) and state.has("Gate Handle", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Sluice Gate: Star Piece", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Spike Wall Room: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Koops", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Parabuzzy Room: Star Piece", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Chest Boat: Black Key 4", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Tube Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Chest Boat: P-Down D-Up", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Tube Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Barrel Room: 10 Coins", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Tube Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Barrel Room: Shine Sprite", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Tube Curse", world.player))
    add_rule(world.multiworld.get_location("Pirate's Grotto Chest Boat: Boat Curse", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Grotto Key", world.player) and state.has("Tube Curse", world.player) and state.has("Black Key 4", world.player))
    add_rule(world.multiworld.get_location("Poshley Heights Station: Goldbob Guide", world.player), lambda state: StateLogic.fahr_outpost(state, world.player) and state.has("Bobbery", world.player))
    add_rule(world.multiworld.get_location("Poshley Heights Station: Star Piece 3", world.player), lambda state: state.has("Super Boots", world.player))
    add_rule(world.multiworld.get_location("Poshley Heights Sanctum Exterior: Shine Sprite", world.player), lambda state: state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Poshley Heights Station: HP Drain P", world.player), lambda state: state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Hallway 1: Thunder Rage", world.player), lambda state: state.has("Ultra Boots", world.player) or (state.has("Yoshi", world.player) and state.has("Koops", world.player)))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 1: Repel Cape", world.player), lambda state: state.has("Yoshi", world.player) and (state.has("Bobbery", world.player) or state.has("Koops", world.player)))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 2: Palace Key", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 1: Life Shroom", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 2: Life Shroom", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 3: Coin", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 3: Point Swap", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Backroom 3: Palace Key", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Hallway 4: Life Shroom", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Far Hallway 4: Shooting Star", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 2) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Final Staircase: Jammin' Jelly", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 3) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player) and state.has("Plane Curse", world.player))
    add_rule(world.multiworld.get_location("Palace of Shadow Final Staircase: Ultra Shroom", world.player), lambda state: state.has("Yoshi", world.player) and state.has("Bobbery", world.player) and state.has("Ultra Boots", world.player) and state.has("Palace Key", world.player, 3) and state.has("Paper Curse", world.player) and state.has("Flurrie", world.player) and state.has("Ultra Hammer", world.player) and state.has("Plane Curse", world.player))

